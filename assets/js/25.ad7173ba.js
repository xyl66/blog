(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{368:function(a,t,s){"use strict";s.r(t);var _=s(42),v=Object(_.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"面试基础题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试基础题"}},[a._v("#")]),a._v(" 面试基础题")]),a._v(" "),s("h2",{attrs:{id:"html与css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html与css"}},[a._v("#")]),a._v(" Html与Css")]),a._v(" "),s("h3",{attrs:{id:"_1-html5有哪些新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-html5有哪些新特性"}},[a._v("#")]),a._v(" 1.html5有哪些新特性")]),a._v(" "),s("ul",[s("li",[a._v("新增了 canvas，video，audio，nav，section，footer，header等元素。")]),a._v(" "),s("li",[a._v("表单控件，calendar、date、time、email、url、search")]),a._v(" "),s("li",[a._v("存储技术：localStorage，sessionStorage等")]),a._v(" "),s("li",[a._v("新的技术：webworker, websocket, SSE")])]),a._v(" "),s("h3",{attrs:{id:"_2-web标准以及w3c标准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-web标准以及w3c标准"}},[a._v("#")]),a._v(" 2.web标准以及w3c标准")]),a._v(" "),s("p",[a._v("标签闭合，标签小写，不乱嵌套，使用外链形式的css和js，结构层，表现层，行为层分离。")]),a._v(" "),s("h3",{attrs:{id:"_3-xhtml和html有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-xhtml和html有什么区别"}},[a._v("#")]),a._v(" 3.xhtml和html有什么区别")]),a._v(" "),s("ul",[s("li",[a._v("一个是功能上的差别")]),a._v(" "),s("li",[a._v("主要是XHTML可兼容各大浏览器、手机以及PDA，并且浏览器也能快速正确地编译网页")]),a._v(" "),s("li",[a._v("另外是书写习惯的差别\n"),s("ul",[s("li",[a._v("XHTML 元素必须被正确地嵌套，闭合，区分大小写，文档必须拥有根元素")]),a._v(" "),s("li",[a._v("简单的说，xhtml更加严格。")])])])]),a._v(" "),s("h3",{attrs:{id:"_4-doctype作用，严格模式与混杂模式如何区分？它们有何意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-doctype作用，严格模式与混杂模式如何区分？它们有何意义"}},[a._v("#")]),a._v(" 4.Doctype作用，严格模式与混杂模式如何区分？它们有何意义?")]),a._v(" "),s("p",[a._v("Doctype处于文档的最前面，用来告诉浏览器的解析器，文档的类型。\n严格模式的js运行和排版是按照浏览器支持的最高标准的。\n混杂模式就是兼容性模式，当页面兼容不好的时候，就可以选用这种模式，防止页面布局错落无法站点工作。")]),a._v(" "),s("h3",{attrs:{id:"_5-行内元素有哪些，块级元素有哪些，空-void-元素有那些？行内元素和块级元素有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-行内元素有哪些，块级元素有哪些，空-void-元素有那些？行内元素和块级元素有什么区别？"}},[a._v("#")]),a._v(" 5.行内元素有哪些，块级元素有哪些，空(void)元素有那些？行内元素和块级元素有什么区别？")]),a._v(" "),s("blockquote",[s("p",[a._v("块级元素独占一行，行内元素合一并行一行")])]),a._v(" "),s("ul",[s("li",[a._v("行内元素：a b span img input select strong")]),a._v(" "),s("li",[a._v("块级元素：div ul li ol dl dt dd h1 h2 h3 p")]),a._v(" "),s("li",[a._v("空元素：br hr link meta")])]),a._v(" "),s("h3",{attrs:{id:"_6-html的全局属性有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-html的全局属性有哪些"}},[a._v("#")]),a._v(" 6.html的全局属性有哪些")]),a._v(" "),s("ul",[s("li",[a._v("class：为元素设置类标识")]),a._v(" "),s("li",[a._v("data-**：为元素添加自定义属性")]),a._v(" "),s("li",[a._v("draggable：设置元素是否可以拖曳")]),a._v(" "),s("li",[a._v("id：元素的id，同一个id文档内是唯一的")]),a._v(" "),s("li",[a._v("style：元素样式")]),a._v(" "),s("li",[a._v("title：鼠标上移显示信息")])]),a._v(" "),s("h3",{attrs:{id:"_7-canvas和svg的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-canvas和svg的区别"}},[a._v("#")]),a._v(" 7.canvas和svg的区别")]),a._v(" "),s("p",[a._v("svg绘制出来的图片有独立dom节点，可以绑定事件，是矢量图，放大图片不会有锯齿。\ncanvas绘制出来的图片是一个画布，等于就是一张图，放大会产生锯齿。")]),a._v(" "),s("h3",{attrs:{id:"_8-css-sprite是什么，有什么优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-css-sprite是什么，有什么优缺点"}},[a._v("#")]),a._v(" 8.css sprite是什么，有什么优缺点")]),a._v(" "),s("blockquote",[s("p",[a._v("就是将多个小图标拼接在一张图片上，减少对图片的请求，使用 background-size来定位到相关图片上。")])]),a._v(" "),s("ul",[s("li",[a._v("优点：\n"),s("ul",[s("li",[a._v("减少HTTP请求数，极大地提高页面加载速度")]),a._v(" "),s("li",[a._v("增加图片信息重复度，提高压缩比，减少图片大小")]),a._v(" "),s("li",[a._v("更换风格方便，只需在一张或几张图片上修改颜色或样式即可实现")])])]),a._v(" "),s("li",[a._v("缺点：\n"),s("ul",[s("li",[a._v("图片合并麻烦")]),a._v(" "),s("li",[a._v("维护麻烦，修改一个图片可能需要从新布局整个图片，样式")])])])]),a._v(" "),s("h3",{attrs:{id:"_9-display-none-与visibility-hidden-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-display-none-与visibility-hidden-的区别"}},[a._v("#")]),a._v(" 9.display: none;与visibility: hidden;的区别")]),a._v(" "),s("ul",[s("li",[a._v("他们的作用都是让元素不可见")]),a._v(" "),s("li",[a._v("区别：\n"),s("ul",[s("li",[a._v("display：none会让元素完全从 dom 树中消失，渲染的时候不占据任何空间。")]),a._v(" "),s("li",[a._v("visibility：hidden不会让元素从渲染树 dom 中消失，而且还是会占据一定的空间，只是内容不可见而已。")])])])]),a._v(" "),s("h3",{attrs:{id:"_10-link与-import的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-link与-import的区别"}},[a._v("#")]),a._v(" 10.link与@import的区别")]),a._v(" "),s("ul",[s("li",[a._v("link是html 的方式，@import是css的方式")]),a._v(" "),s("li",[a._v("link最大限度支持并行下载，@import过多嵌套导致串行下载")]),a._v(" "),s("li",[a._v('link可以通过rel="alternate stylesheet"指定候选样式')]),a._v(" "),s("li",[a._v("总体来说：link优于@import")])]),a._v(" "),s("h3",{attrs:{id:"_11-清除浮动的几种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-清除浮动的几种方式"}},[a._v("#")]),a._v(" 11.清除浮动的几种方式")]),a._v(" "),s("ul",[s("li",[a._v("clear：both，添加一个空标签div")]),a._v(" "),s("li",[a._v("父级div定义伪类:after和zoom")]),a._v(" "),s("li",[a._v("父级div定义overflow:hidden")]),a._v(" "),s("li",[a._v("父级div也浮动，需要定义宽度")]),a._v(" "),s("li",[a._v("结尾处加br标签clear:both")])]),a._v(" "),s("h3",{attrs:{id:"_12-为什么要初始化css样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-为什么要初始化css样式"}},[a._v("#")]),a._v(" 12.为什么要初始化css样式")]),a._v(" "),s("blockquote",[s("p",[a._v("因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。\n当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化")])]),a._v(" "),s("h3",{attrs:{id:"_13-css3有哪些新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-css3有哪些新特性"}},[a._v("#")]),a._v(" 13.css3有哪些新特性")]),a._v(" "),s("ul",[s("li",[a._v("新增各种css选择器")]),a._v(" "),s("li",[a._v("圆角 border-radius")]),a._v(" "),s("li",[a._v("多列布局")]),a._v(" "),s("li",[a._v("阴影和反射")]),a._v(" "),s("li",[a._v("文字特效text-shadow")]),a._v(" "),s("li",[a._v("线性渐变")]),a._v(" "),s("li",[a._v("旋转transform")]),a._v(" "),s("li",[a._v("动画效果")])]),a._v(" "),s("h3",{attrs:{id:"_14-介绍一下css盒子模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-介绍一下css盒子模型"}},[a._v("#")]),a._v(" 14.介绍一下css盒子模型")]),a._v(" "),s("ul",[s("li",[a._v("有两种， IE盒子模型、W3C盒子模型；")]),a._v(" "),s("li",[a._v("盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)；")]),a._v(" "),s("li",[a._v("区 别： IE（低版本）的content部分把 border 和 padding计算了进去;")])]),a._v(" "),s("h3",{attrs:{id:"_15-css的优先级算法是怎么样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-css的优先级算法是怎么样的"}},[a._v("#")]),a._v(" 15.css的优先级算法是怎么样的")]),a._v(" "),s("ul",[s("li",[a._v("优先级为: !important > id > class > tag")]),a._v(" "),s("li",[a._v("important 比 内联优先级高")])]),a._v(" "),s("h3",{attrs:{id:"_16-事件模型是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-事件模型是什么"}},[a._v("#")]),a._v(" 16.事件模型是什么")]),a._v(" "),s("p",[a._v("w3c中定义的事件发生的过程的3个阶段：\n捕获阶段（capturing）、目标阶段（targetin）、冒泡阶段（bubbling）")]),a._v(" "),s("h3",{attrs:{id:"_17-什么是事件代理，事件委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-什么是事件代理，事件委托"}},[a._v("#")]),a._v(" 17.什么是事件代理，事件委托")]),a._v(" "),s("blockquote",[s("p",[a._v("假如我们有一个 ul 列表，里面有4个li，我们可以在 li 上绑定 click 事件，但是也可以在她们的 父节点 ul上绑定，这种在 父节点上绑定事件来代替子节点事件的方法，就叫做事件委托。")])]),a._v(" "),s("h3",{attrs:{id:"_18-float"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-float"}},[a._v("#")]),a._v(" 18.float")]),a._v(" "),s("ul",[s("li",[a._v("清除浮动")]),a._v(" "),s("li",[a._v("BFC")]),a._v(" "),s("li",[a._v("块状化")])]),a._v(" "),s("h3",{attrs:{id:"_19-内联元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-内联元素"}},[a._v("#")]),a._v(" 19.内联元素")]),a._v(" "),s("ul",[s("li",[a._v("ex与x-height")]),a._v(" "),s("li",[a._v("line-height 1.5 150% 1.5em 区别\n"),s("ul",[s("li",[a._v("行距半行距")])])]),a._v(" "),s("li",[a._v("verticle-align")]),a._v(" "),s("li",[a._v("sub、pub标签实现")])]),a._v(" "),s("h2",{attrs:{id:"js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[a._v("#")]),a._v(" JS")]),a._v(" "),s("h3",{attrs:{id:"_1-如何理解闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何理解闭包"}},[a._v("#")]),a._v(" 1.如何理解闭包")]),a._v(" "),s("ul",[s("li",[a._v("定义和用法：\n一个父函数里面包含了一个子函数，子函数调用了父函数内部的变量，如果子函数在外部被调用，就产生了闭包。\n简单的说：闭包就是能够读取其他函数内部变量的函数。")]),a._v(" "),s("li",[a._v("闭包的作用：\n"),s("ul",[s("li",[a._v("读取其他函数内部的变量")]),a._v(" "),s("li",[a._v("变量保存在内存中\n注意：\n使用过多的闭包会消耗大量内存，造成网页的性能问题，可以在函数执行完成之前把不需要的局部变量删除。")])])])]),a._v(" "),s("h3",{attrs:{id:"_2-说说你对作用域链的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-说说你对作用域链的理解"}},[a._v("#")]),a._v(" 2.说说你对作用域链的理解")]),a._v(" "),s("h3",{attrs:{id:"_3-js原型，原型链有什么特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-js原型，原型链有什么特点"}},[a._v("#")]),a._v(" 3.js原型，原型链有什么特点")]),a._v(" "),s("h3",{attrs:{id:"_4-对this的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-对this的理解"}},[a._v("#")]),a._v(" 4.对this的理解")]),a._v(" "),s("ul",[s("li",[a._v("this总是指向函数的直接调用者（而非间接调用者）")]),a._v(" "),s("li",[a._v("如果有new关键字，this指向new出来的那个对象")]),a._v(" "),s("li",[a._v("在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的thi\ns总是指向全局对象Window")])]),a._v(" "),s("h3",{attrs:{id:"_5-哪些操作会造成内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-哪些操作会造成内存泄漏"}},[a._v("#")]),a._v(" 5.哪些操作会造成内存泄漏")]),a._v(" "),s("ul",[s("li",[a._v("内存泄漏是指 一些对象我们不在使用它的时候，他任然存在")]),a._v(" "),s("li",[a._v("setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏")]),a._v(" "),s("li",[a._v("闭包使用不当")])]),a._v(" "),s("h3",{attrs:{id:"_6-vue、react、angular"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-vue、react、angular"}},[a._v("#")]),a._v(" 6.vue、react、angular")]),a._v(" "),s("h3",{attrs:{id:"_7-eval是做什么的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-eval是做什么的"}},[a._v("#")]),a._v(" 7.eval是做什么的")]),a._v(" "),s("ul",[s("li",[a._v("它的功能是把对应的字符串解析成JS代码并运行")]),a._v(" "),s("li",[a._v("应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）")]),a._v(" "),s("li",[a._v("由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval('('+ str +')')")])]),a._v(" "),s("h3",{attrs:{id:"_8-null和undefine的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-null和undefine的区别"}},[a._v("#")]),a._v(" 8.null和undefine的区别")]),a._v(" "),s("ul",[s("li",[a._v("undefine:\n表示不存在这个值，如果变量被声明了没有赋值")]),a._v(" "),s("li",[a._v("null：\n变量被定义赋值了，但是为空的情况，没有任何属性方法和值\n在验证null时，一定要使用　=== ，因为 ==无法分别null 和　undefined")])]),a._v(" "),s("h3",{attrs:{id:"_9-对json的了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-对json的了解"}},[a._v("#")]),a._v(" 9.对json的了解")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("是一种轻量级的数据交换格式")])]),a._v(" "),s("li",[s("p",[a._v("数据格式简单，易于读写")])]),a._v(" "),s("li",[s("p",[a._v("JSON字符串转换为JSON对象:")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'('")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("')'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseJSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("JSON对象转换为json字符串")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" last"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("toJSONString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" last"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])])]),a._v(" "),s("h3",{attrs:{id:"_10-同步和异步的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-同步和异步的区别"}},[a._v("#")]),a._v(" 10.同步和异步的区别")]),a._v(" "),s("ul",[s("li",[a._v("同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作")]),a._v(" "),s("li",[a._v("异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容")])]),a._v(" "),s("h3",{attrs:{id:"_11-谈谈对es6的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-谈谈对es6的理解"}},[a._v("#")]),a._v(" 11.谈谈对ES6的理解")]),a._v(" "),s("blockquote",[s("p",[a._v("新增了 字符串模板/箭头函数/for of（遍历对象中的值）/增加了块级作用域")])]),a._v(" "),s("h3",{attrs:{id:"_12-什么是面向对象的编程和面向过程的编程，他们的异同和优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-什么是面向对象的编程和面向过程的编程，他们的异同和优缺点"}},[a._v("#")]),a._v(" 12.什么是面向对象的编程和面向过程的编程，他们的异同和优缺点")]),a._v(" "),s("ul",[s("li",[a._v("面向过程就是对一个问题提出解决思路，然后一步步的列出函数解决，依次调用。")]),a._v(" "),s("li",[a._v("面向对象就是将构成问题分解成各个对象，建立对象的目的不是为了完成一个步骤，而是- 为了描叙某个事物在整个解决问题的步骤中的行为。")]),a._v(" "),s("li",[a._v("面向对象是以功能来划分问题，而不是步骤")])]),a._v(" "),s("h3",{attrs:{id:"_13-面向对象的编程思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-面向对象的编程思想"}},[a._v("#")]),a._v(" 13.面向对象的编程思想")]),a._v(" "),s("blockquote",[s("p",[a._v("基本思想是使用封装，类，对象的方法进行程序设计。")])]),a._v(" "),s("ul",[s("li",[a._v("优点：\n"),s("ul",[s("li",[a._v("容易维护")]),a._v(" "),s("li",[a._v("易扩展")]),a._v(" "),s("li",[a._v("开发工作的重用性、继承性高，降低重复工作量。")]),a._v(" "),s("li",[a._v("缩短了开发周期")])])])]),a._v(" "),s("h3",{attrs:{id:"_14-函数式编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-函数式编程"}},[a._v("#")]),a._v(" 14.函数式编程")]),a._v(" "),s("blockquote",[s("p",[a._v('它具有以下特性：闭包和高阶函数、惰性计算、递归、函数是"第一等公民"、只用"表达式"')])]),a._v(" "),s("h3",{attrs:{id:"_15-箭头函数与普通函数的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-箭头函数与普通函数的区别"}},[a._v("#")]),a._v(" 15.箭头函数与普通函数的区别")]),a._v(" "),s("ul",[s("li",[a._v("this的指向不通")])]),a._v(" "),s("h3",{attrs:{id:"_16-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-类型"}},[a._v("#")]),a._v(" 16.类型")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("数据类型 symbol")])]),a._v(" "),s("li",[s("p",[a._v("undefined、void(0)区别")])]),a._v(" "),s("li",[s("p",[a._v("NaN")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("NaN === NaN // 输出")])]),a._v(" "),s("li",[s("code",[a._v("typeof NaN // 输出")])])])]),a._v(" "),s("li",[s("p",[a._v("数据格式化")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("parseInt、Number、Math.floor 不同点")])])])])]),a._v(" "),s("h2",{attrs:{id:"通信原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信原理"}},[a._v("#")]),a._v(" 通信原理")]),a._v(" "),s("h3",{attrs:{id:"_1-常见的html状态码和他的含义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-常见的html状态码和他的含义"}},[a._v("#")]),a._v(" 1.常见的HTML状态码和他的含义")]),a._v(" "),s("ul",[s("li",[a._v("1XX：信息状态码\n"),s("ul",[s("li",[a._v("100 Continue 继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息")])])]),a._v(" "),s("li",[a._v("2XX：成功状态码\n"),s("ul",[s("li",[a._v("200 OK 正常返回信息")]),a._v(" "),s("li",[a._v("201 Created 请求成功并且服务器创建了新的资源")]),a._v(" "),s("li",[a._v("202 Accepted 服务器已接受请求，但尚未处理")])])]),a._v(" "),s("li",[a._v("3XX：重定向\n"),s("ul",[s("li",[a._v("301 Moved Permanently 请求的网页已永久移动到新位置。")]),a._v(" "),s("li",[a._v("302 Found 临时性重定向。")]),a._v(" "),s("li",[a._v("303 See Other 临时性重定向，且总是使用 GET 请求新的 URI。")]),a._v(" "),s("li",[a._v("304 Not Modified 自从上次请求后，请求的网页未修改过。")])])]),a._v(" "),s("li",[a._v("4XX：客户端错误\n"),s("ul",[s("li",[a._v("400 Bad Request 服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起    -  请求。")]),a._v(" "),s("li",[a._v("401 Unauthorized 请求未授权。")]),a._v(" "),s("li",[a._v("403 Forbidden 禁止访问。")]),a._v(" "),s("li",[a._v("404 Not Found 找不到如何与 URI 相匹配的资源。")])])]),a._v(" "),s("li",[a._v("5XX: 服务器错误\n"),s("ul",[s("li",[a._v("500 Internal Server Error 最常见的服务器端错误。")]),a._v(" "),s("li",[a._v("503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。")])])])]),a._v(" "),s("h3",{attrs:{id:"_2-ajax的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-ajax的优缺点"}},[a._v("#")]),a._v(" 2.ajax的优缺点")]),a._v(" "),s("ul",[s("li",[a._v("优点：\n"),s("ul",[s("li",[a._v("通过异步模式，提升了用户体验.")]),a._v(" "),s("li",[a._v("优化了浏览器和服务器之间的传输，减少不必要的数据往返，减少了带宽占用.")]),a._v(" "),s("li",[a._v("Ajax在客户端运行，承担了一部分本来由服务器承担的工作，减少了大用户量下的服务器负载。")]),a._v(" "),s("li",[a._v("Ajax可以实现动态不刷新（局部刷新）")])])]),a._v(" "),s("li",[a._v("缺点：\n"),s("ul",[s("li",[a._v("安全问题 AJAX暴露了与服务器交互的细节。")]),a._v(" "),s("li",[a._v("对搜索引擎的支持比较弱。")]),a._v(" "),s("li",[a._v("不容易调试。")])])])]),a._v(" "),s("h3",{attrs:{id:"_3-怎么解决跨域问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-怎么解决跨域问题"}},[a._v("#")]),a._v(" 3.怎么解决跨域问题")]),a._v(" "),s("ul",[s("li",[a._v("jsonp")]),a._v(" "),s("li",[a._v("iframe")]),a._v(" "),s("li",[a._v("doamin")]),a._v(" "),s("li",[a._v("window.postMessage")]),a._v(" "),s("li",[a._v("服务器上设置代理页面")]),a._v(" "),s("li",[a._v("cors")])]),a._v(" "),s("h2",{attrs:{id:"网站性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网站性能优化"}},[a._v("#")]),a._v(" 网站性能优化")]),a._v(" "),s("h3",{attrs:{id:"_1-从浏览器地址栏输入url到显示页面的步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-从浏览器地址栏输入url到显示页面的步骤"}},[a._v("#")]),a._v(" 1.从浏览器地址栏输入url到显示页面的步骤")]),a._v(" "),s("ul",[s("li",[a._v("①浏览器根据请求的URL，交给DNS域名解析，找到真实的ip，交给域名解析。")]),a._v(" "),s("li",[a._v("②服务器交给后端处理完成后返回的数据，浏览器接收文件HTML,CSS,JS图片等。")]),a._v(" "),s("li",[a._v("③浏览器对加载的资源进行语法解析，建立相应的数据内部结构。")]),a._v(" "),s("li",[a._v("④解析html，创建dom树，自上而下的顺序")]),a._v(" "),s("li",[a._v("⑤解析css，优先级：浏览器默认设置<用户设置<外部样式<内联样式<HTML中的style样式；")]),a._v(" "),s("li",[a._v("⑥将css与dom合并，构建渲染树")]),a._v(" "),s("li",[a._v("⑦布局重绘重排，页面完成渲染。")])]),a._v(" "),s("h3",{attrs:{id:"_2-sessionstorge-localstorge-cookie之间的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-sessionstorge-localstorge-cookie之间的区别"}},[a._v("#")]),a._v(" 2.sessionStorge , localStorge , cookie之间的区别")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("数据存储大小")]),a._v(" "),s("p",[a._v("cookie：4kb\nwebStorge：5mb")])]),a._v(" "),s("li",[s("p",[a._v("数据存储有效期限")]),a._v(" "),s("p",[a._v("cookie：根据自己的设置时间\nsessionStorage：关闭窗口后失效\nlocalStorage：永久有效除非js删除或者浏览器删除")])]),a._v(" "),s("li",[s("p",[a._v("作用域")]),a._v(" "),s("p",[a._v("cookie和localStorage是在同源窗口，同一个浏览器共享的，sessionStorage只在同一个标签页共享。")])])]),a._v(" "),s("h3",{attrs:{id:"_3-请指出document-load和document-ready的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-请指出document-load和document-ready的区别？"}},[a._v("#")]),a._v(" 3.请指出document load和document ready的区别？")]),a._v(" "),s("ul",[s("li",[a._v("ready：页面的文档结构加载完成，不包括图片视频等非文字内容。")]),a._v(" "),s("li",[a._v("load：所有页面元素都加载完成")]),a._v(" "),s("li",[a._v("ready的速度比load快")])]),a._v(" "),s("h3",{attrs:{id:"_4-渐进增强和优雅降级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-渐进增强和优雅降级"}},[a._v("#")]),a._v(" 4.渐进增强和优雅降级")]),a._v(" "),s("ul",[s("li",[a._v("渐进增强 ：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。")]),a._v(" "),s("li",[a._v("优雅降级 ：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容")])]),a._v(" "),s("h3",{attrs:{id:"_5-base64的原理及优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-base64的原理及优缺点"}},[a._v("#")]),a._v(" 5.base64的原理及优缺点")]),a._v(" "),s("ul",[s("li",[a._v("优点可以加密，减少了http请求")]),a._v(" "),s("li",[a._v("缺点是需要消耗CPU进行编解码")])]),a._v(" "),s("h3",{attrs:{id:"_6-内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-内存"}},[a._v("#")]),a._v(" 6.内存")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("arr = [] 与 arr.length = 0 区别")])]),a._v(" "),s("li",[a._v("垃圾回收机制")]),a._v(" "),s("li",[a._v("回收触发时机")])]),a._v(" "),s("h2",{attrs:{id:"vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[a._v("#")]),a._v(" Vue")]),a._v(" "),s("details",[s("summary",[a._v("\n1.v-for中为什么要绑定key值\n")]),a._v(" "),s("ul",[s("li",[a._v("为了跟踪每个节点的身份，从而重用和重新排序现有元素")]),a._v(" "),s("li",[a._v("默认使用“就地更新”的策略。如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序，而是就地更新每个元素，并且确保它们在每个索引位置正确渲染\n")])])]),a._v(" "),s("details",[s("summary",[a._v("\n2.什么是具名插槽、作用域插槽\n")])]),a._v(" "),s("details",[s("summary",[a._v("\n3.计算属性的getter、setter有什么用\n")]),a._v(" "),s("ul",[s("li",[a._v("setter给计算属性赋值时会调用\n")])])]),a._v(" "),s("details",[s("summary",[a._v("\n4.methods中可以使用箭头函数吗，为什么？\n")]),a._v(" "),s("ul",[s("li",[a._v("不能，无法获取到vue实例\n")])])]),a._v(" "),s("details",[s("summary",[a._v("\n5.组件传值有哪些方法\n")])])])}),[],!1,null,null,null);t.default=v.exports}}]);